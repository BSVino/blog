Title: A Lesson On Management From the Lamplighters
Time: 1415440448


On the <a href="http://youtu.be/t8QEOBgLBQU?t=22m9s">recommendation</a> of<a href="http://en.wikipedia.org/wiki/Gabe_Newell"> Gabe Newell</a> I read the book<a href="http://www.amazon.com/Peopleware-Productive-Projects-Second-Edition/dp/0932633439"> Peopleware by Tom DeMarco</a>. In it, DeMarco argues that giving employees autonomy makes them more productive. Instead of specifying work requirements to an employee and then evaluating the work produced, DeMarco argues that it's better to communicate business constraints to the employee and then let her specify the work requirements. The employee is better suited to draft work requirements anyway, as she has the ground-level information of the operating constraints. And a sufficiently self-motivated employee is more likely to want to live up to her own work standards than the possibly arbitrary standards of a manager. So that's a very broad summary of DeMarco's work, or at least a possibly poor summary of a book I read more than a year ago and don't have access to for reference at the moment.

In any case, I've found this management style to be very useful in my own projects. While I was making games with Lunar Workshop, I worked with an artist to whom I would send a list of whichever art pieces I wanted and he would send me back work. One day I decided to put DeMarco's book to work, and I told him to make whatever he wanted and send that to me. By this time we had been working together for years, so I felt that he knew the operating constraints well enough not to produce work that couldn't be used, so there was little risk in having him write his own mission plan. Turns out, it was hugely successful. The work he sent me from then on surprised me in its volume, quality, and creativity. That is to say, he worked more, the results were better, and he did things I never would have thought of. He had some kind of creative energy in a bottle, just waiting to be let out.

I'm not arguing that giving complete autonomy is always the best way to do things, and DeMarco covers a few caveats to this system in Peopleware, but I like to try these tactics in different situations to see how they can be implemented in practice. One such time was at a festival called Burning Man in the high desert of Nevada.

I know Burning Man has a reputation of being a hangout for hippies, but before you come to the conclusion that I'm a hippie, let me explain that I went to Burning Man as part of a work camp, the Lamplighters. (I think it's very telling of my personality that I went to a week long party in the desert and I worked the whole time.) Every night of the event the Lamplighters light hundreds of kerosene lamps, load them onto yolks in groups of 12, load those yolks onto the backs of about a hundred volunteers, and march in a procession out into the open desert to and raise the lanterns onto spires throughout the city. It sounds pointless and insane but it actually has some utility: With lanterns through the main thoroughfares, the 60,000 people who attend Burning Man can navigate through the sea of neon fluorescent lights and find their way home when a 12 hour long dust storms kick up and all you can see is that row of burning lanterns.

As we prepare the procession each evening, my job is to assist people doing their respective jobs: carriers whose job it is to carry 12 lanterns each on their backs, lifters who take the lanterns from the carriers and lift them onto the spires where they would burn through the night, and support people who assist carriers and try to relight extinguished lanterns. One important task for the support people is to point the lifters to the next lantern that should be lifted. This helps avoid a lot of confusion, especially at first when a lifter (who is a likely volunteer doing this for the first time) has to choose among dozens of lamps in a row. If the wrong one is chosen then everything gets out of whack.

So seeing an opportunity to put these ideas I have about autonomy-management into action, I pulled a group of four support people aside and explained the important task of pointing to the next lantern. I asked them to decide amongst themselves who would be responsible for this task, or perhaps that they would all share responsibility, so long as there was always a pointer. I gave them complete autonomy as to who of the four would point.

It was a disaster. Nobody pointed. The pointing was a shared responsibility among four people, and an individual person may not want to take over a job if it would exclude three others from it, because after all that would be rude. Then everybody gets engrossed in their other tasks and figures that somebody else is probably pointing and the result is that nobody is pointing.

The next day I tried a different approach with a new crop of volunteers. I again gathered my group of a four support people and said, "I have a critically important task that I want a volunteer for." Of course, everybody wants to be critically important, so I had no trouble finding people willing to do what is otherwise a very boring task, namely, walking slowly and pointing. After assigning my volunteer to the task of pointing, there was never any problem. Pointing always happened, the lifters never got confused, the procession went smoothly, the city got lit, and all of the partying hippies made it home each night. (Okay, maybe not that last part.)

In the end the work got done better and more efficiently when I assigned a task specifically to a single person. Isn't this a significant strike against the idea of autonomy? I don't think so. The improved work wasn't a result of a decrease in autonomy, but rather of an increase in specialization. The support person I assigned as pointer was now absolved of the other responsibilities of support (relighting lanterns, for example) and so could concentrate on doing one thing and doing it well. Likewise, the other three support people did their jobs better as they didn't have to split their minds between pointing and other tasks. As these people were volunteers who were likely doing this for the first time, they probably didn't have the context required to prioritize the work well by themselves. Thus, assigning the work for them also communicates to them their priorities.

I would also argue that there was no decrease in autonomy. I didn't tell the support people, "This is your job and you must do this job and you may only do this job." I never told the pointer not to relight any lanterns, and I never told the other support people never to point. For all I know, once they got into the desert they realized that the pointer and the lantern relighter should switch places, and that would still have been fine, if not better.<br>

If this example is generalized, it means that the idea of autonomy isn't mutually exclusive with assigning work. Assigning work is beneficial - individuals are more productive when they specialize, that's basic economics. Even the flattest of organizations benefit from structure that increases the specialization of labor, when it doesn't interfere with the "flatness". As the Burning Man case study shows, the structure also benefits the volunteers, and by extension anyone new to a project, by providing a single point of reference for questions and clarifications, and by allowing newcomers to benefit from institutional knowledge. But allowing autonomy means ensuring that the assignments given by the manager act as guidelines rather than to-do lists. Assigning work to new employees can help build the structure an employee needs until the employee gains enough contextual experience to prioritize their own tasks, but the employee (or volunteer carrying a kerosene-filled metal lantern) remains in the best position to decide if, when, and how assignments should be changed.